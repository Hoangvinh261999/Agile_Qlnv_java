/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import NhanVien.NhanVienVanPhong;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

/**
 *
 * @author kuteb
 */
public class FormQuanLy extends javax.swing.JFrame {

    private DefaultTableModel tblModel;
//    private static int a;
    private static int sttQL;

    /**
     * Creates new form FormNhanVien
     */
//    public FormQuanLy() {
//        initComponents();
//        initTable();
//        taoList();
//        fillToTable();
//        setLocationRelativeTo(null);
//    }
    public FormQuanLy(Integer stt) {
        this.sttQL = stt;
//        System.out.println("day là stk formad: " + this.sttQL);
        initComponents();
        initTable();
        taoList();

        taoLabel();
        fillToTable();
        setLocationRelativeTo(null);
    }
    private static Connection con = null;

    public static Connection layKetNoi() throws SQLException {
        if (con == null) {
            String connectUrl = "jdbc:sqlserver://localhost:1433;databaseName=Agile_data;user=sa;password=12345";
            con = DriverManager.getConnection(connectUrl);
        }
//        System.out.println(con);
        return con;
    }

    public void initTable() {
        tblModel = new DefaultTableModel();
        String[] colum = new String[]{"Mã", "Họ Tên", "Tuổi", "Giới Tính", "SDT", "Email", "Phòng Ban", "Lương", "Địa Chỉ"};
        tblModel.setColumnIdentifiers(colum);
        tblQuanLy.setModel(tblModel);
//        tblModel.setRowSelectionAllowed();

    }

    public void taoList() {
        ListNv.removeAll(ListNv);
        try {
            Statement st = layKetNoi().createStatement();
            String query = "use Agile_data; select * from NhanVien";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                NhanVienVanPhong nv = new NhanVienVanPhong();
                nv.setMaNV(rs.getString(1));
                nv.setHoTen(rs.getString(2));
                nv.setTuoi(rs.getInt(3));
                nv.setGioiTinh(rs.getString(4));
                nv.setSoDT(rs.getString(5));
                nv.setEmail(rs.getString(6));
                nv.setPhongBan(rs.getString(7));
                nv.setLuong(rs.getInt(8));
                nv.setDiachi(rs.getString(9));
                ListNv.add(nv);
            };
        } catch (Exception e) {
        }

    }

    public void taoLabel() {
        try {
            Statement st = layKetNoi().createStatement();
            String query = "use Agile_data; select TenQL from QuanLY where Matk like '" + this.sttQL + "';";
            System.out.println(query);

            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                labelTenQL.setText(String.valueOf("Quản Lý: " + rs.getString(1)));
            }
        } catch (Exception e) {
        }
        System.out.println("day la label" + labelTenQL.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        labelTenQL = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuanLy = new javax.swing.JTable();
        txtMa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTuoi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSdt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtLuong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cbbGioiTinh = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbbPhongBan = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 153));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("QUẢN LÝ NHÂN VIÊN");

        jButton1.setText("Thêm");
        jButton1.setMaximumSize(new java.awt.Dimension(80, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(80, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(80, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Xoá");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Lương ↑/↓");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tblQuanLy.setBackground(new java.awt.Color(255, 255, 204));
        tblQuanLy.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblQuanLy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQuanLy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblQuanLy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblQuanLyMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblQuanLy);

        jLabel3.setText("MaNV");

        jLabel4.setText("Tuổi");

        jLabel5.setText("SDT");

        jLabel6.setText("Họ Tên");

        jLabel7.setText("Lương");

        jLabel8.setText("Địa Chỉ");

        jLabel9.setText("Email");

        cbbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giới Tính", "Nam", "Nữ" }));

        jLabel10.setText("Giới Tính");

        cbbPhongBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phòng Ban", "CNTT", "KT" }));

        jLabel11.setText("Phòng Ban");

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\kuteb\\Downloads\\icons8-hand-with-pen-50 (1).png")); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\kuteb\\Downloads\\icons8-manager-26.png")); // NOI18N

        jButton7.setText("Thoát");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jButton3.setText("Lưu File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        jButton6.setText("Đọc File");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setText("Đăng Xuất");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cbbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbbPhongBan, 0, 94, Short.MAX_VALUE)
                                    .addComponent(txtLuong)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(67, 67, 67)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(labelTenQL, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(69, 69, 69))))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(cbbPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(labelTenQL, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhat)
                    .addComponent(btnTimKiem)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(btnReset)
                    .addComponent(jButton3)
                    .addComponent(jButton7)
                    .addComponent(jButton6))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed

        fillByIndex(TimNV());
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (sapxep == true) {
            sapXepSP();
            sapxep = false;
            JOptionPane.showMessageDialog(this, "Đã sắp xếp lương tăng!");
            return;
        } else {
            Collections.reverse(ListNv);
            tblModel.setRowCount(0);
            fillToTable();
            JOptionPane.showMessageDialog(this, "Đã sắp xếp lương giảm!");

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addNV();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        xoaNV();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetForm();
        tblQuanLy.clearSelection();
    }//GEN-LAST:event_btnResetActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            taoFile();
        } catch (IOException ex) {
            Logger.getLogger(FormQuanLy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tblQuanLyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLyMousePressed
        int index = tblQuanLy.getSelectedRow();
        fillByIndex(index);
    }//GEN-LAST:event_tblQuanLyMousePressed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        updateTT();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            docFile();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     this.dispose();
      FormDn  login = new FormDn();
      login.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Dark Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormQuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormQuanLy(sttQL).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cbbGioiTinh;
    private javax.swing.JComboBox<String> cbbPhongBan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTenQL;
    private javax.swing.JTable tblQuanLy;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables
   List<NhanVienVanPhong> ListNv = new ArrayList<>();
    boolean check;
    boolean sapxep = true;

    public void fillToTable() {
        for (NhanVienVanPhong nv : ListNv) {
            tblModel.addRow(new String[]{nv.getMaNV(), nv.getHoTen(), String.valueOf(nv.getTuoi()), nv.getGioiTinh(), nv.getSoDT(),
                nv.getEmail(),
                nv.getPhongBan(), String.valueOf(nv.getLuong()), nv.getDiachi(),});
        }
    }

    public void addNV() {

        if (checkTrungMa() == false || checkRong() == false || validateForm() == false) {
            return;
        } else {
            try {
                String queryAdd = "insert into TaiKhoan values('" + txtMa.getText() + "'," + "'1234'," + "'nv'" + ");" + "insert into NhanVien values(" + "'" + txtMa.getText() + "',N'" + txtTen.getText() + "'," + String.valueOf(txtTuoi.getText()) + "," + "'" + cbbGioiTinh.getSelectedItem() + "'," + "'" + txtSdt.getText() + "'," + "'" + txtEmail.getText() + "'," + "'" + cbbPhongBan.getSelectedItem() + "'," + String.valueOf(txtLuong.getText()) + "," + "N'" + txtDiaChi.getText() + "')";
//                System.out.println(queryAdd);
                Statement ppr = con.createStatement();
                ppr.executeUpdate(queryAdd);
                JOptionPane.showMessageDialog(this, "Đã Thêm Nhân Viên: " + txtTen.getText());
//                System.out.println(queryAdd);
                ListNv.removeAll(ListNv);
                tblModel.setRowCount(0);
                taoList();
                fillToTable();
            } catch (Exception e) {
            }
        }

    }

    public boolean checkRong() {
        boolean check2 = true;
        if (txtMa.getText().equals("")) {
            check2 = false;
        }
        if (txtTuoi.getText().equals("")) {
            check2 = false;
        }
        if (txtSdt.getText().equals("")) {
            check2 = false;
        }
        if (txtLuong.getText().equals("")) {
            check2 = false;
        }
        if (txtTen.getText().equals("")) {
            check2 = false;
        }
        if (cbbGioiTinh.getSelectedIndex() == 0) {
            check2 = false;
        }
        if (cbbPhongBan.getSelectedIndex() == 0) {
            check2 = false;
        }
        if (txtDiaChi.getText().equals("")) {
            check2 = false;
        }
        if (txtEmail.getText().equals("")) {
            check2 = false;
        }
        if (check2 == false) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ tất cả thông tin của nhân viên!");
        }
        return check2;
    }

    public boolean checkTrungMa() {
        boolean trung = true;
        for (NhanVienVanPhong nv : ListNv) {
            if (nv.getMaNV().equalsIgnoreCase(txtMa.getText())) {
                trung = false;
            } else {
            }
        };
        if (trung == false) {
            JOptionPane.showMessageDialog(this, "Đã tồn tại nhân viên này!");

        }
        return trung;
    }

    public int TimNV() {
        int index = 0;
        int check1 = 1;
        for (int i = 0; i < ListNv.size(); i++) {
            if (txtMa.getText().equalsIgnoreCase(ListNv.get(i).getMaNV())) {
                check1 = 2;
                tblModel.setRowCount(0);
                fillToTable();
                index += i;
                break;
            } else {
                check1 = 1;
            }
        }
        if (check1 != 1) {
            JOptionPane.showMessageDialog(this, "Đã Tìm Thấy Nhân Viên");
        } else {
            JOptionPane.showMessageDialog(this, "Không Tồn Tại Nhân Viên Này !");
            index = -1;
        }
//        System.out.println(index);
        return index;
    }

    public void xoaNV() {
        int checkXoa = 1;
        for (NhanVienVanPhong nv : ListNv) {
            if (nv.getMaNV().equalsIgnoreCase(txtMa.getText())) {
                checkXoa = 1;
                break;
            } else {
                checkXoa++;
            }
        }
        System.out.println("checkxoa" + checkXoa);
        if (checkXoa == 1) {
            int choose = JOptionPane.showConfirmDialog(this, "Xoá nhân viên này chứ");
            if (choose == JOptionPane.YES_OPTION && txtMa.getText().equals("") == false) {
                try {
                    String queryXoa = "use Agile_data; Delete from NhanVien where Manv like " + "'" + txtMa.getText() + "'";
                    PreparedStatement st = layKetNoi().prepareStatement(queryXoa);
//                    System.out.println(queryXoa);
                    st.execute();
                    JOptionPane.showMessageDialog(this, "đã xoá");
                } catch (Exception e) {

                }
            } else {
                JOptionPane.showMessageDialog(this, "Huỷ xoá!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại nhân viên này !");
        }
        taoList();
        tblModel.setRowCount(0);
        fillToTable();

    }

    public void resetForm() {
        txtDiaChi.setText("");
        txtEmail.setText("");
        txtLuong.setText("");
        txtMa.setText("");
        txtSdt.setText("");
        txtTen.setText("");
        txtTuoi.setText("");
        cbbGioiTinh.setSelectedIndex(0);
        cbbPhongBan.setSelectedIndex(0);
        JOptionPane.showMessageDialog(this, "Đã reset !");
    }

    public void fillByIndex(Integer index) {
        try {
            if (index == -1) {
            return;
        } else {
            ListNv.get(index);
            txtDiaChi.setText(ListNv.get(index).getDiachi());
            txtEmail.setText(ListNv.get(index).getEmail());
            txtLuong.setText(String.valueOf(ListNv.get(index).getLuong()));
            txtMa.setText(ListNv.get(index).getMaNV());
            txtSdt.setText(ListNv.get(index).getSoDT());
            txtTen.setText(ListNv.get(index).getHoTen());
            txtTuoi.setText(String.valueOf(ListNv.get(index).getTuoi()));

            if (ListNv.get(index).getGioiTinh().equals("Nam")) {
                cbbGioiTinh.setSelectedIndex(1);

            } else {
                cbbGioiTinh.setSelectedIndex(2);
            }
            if (ListNv.get(index).getPhongBan().equals("CNTT")) {
                cbbPhongBan.setSelectedIndex(1);

            } else {
                cbbPhongBan.setSelectedIndex(2);
            }
            tblQuanLy.setRowSelectionInterval(index, index);
        }
        } catch (Exception e) {
        }
        
    }

    public void sapXepSP() {
//        System.out.println(sapxep);
        if (sapxep = true) {
            Collections.sort(ListNv, (nv1, nv2) -> (int) (nv1.getLuong() - nv2.getLuong()));
            tblModel.setRowCount(0);
            fillToTable();
        }

    }

    public void readObject(String path) {
        try {
            FileInputStream fis = new FileInputStream(path);
            ObjectInputStream ois = new ObjectInputStream(fis);
            ListNv = (List<NhanVienVanPhong>) ois.readObject();
            fis.close();
            ois.close();
            JOptionPane.showMessageDialog(this, "Doc thanh cong");
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Loi Khong thay file!");
        }
    }

    public void writeObject(String path) {
        try {
            FileOutputStream fos = new FileOutputStream(path);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(ListNv);
            oos.close();
            fos.close();
            JOptionPane.showMessageDialog(this, "Lưu thanh cong");

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Loi!");
            ;
        }
    }

    public void updateTT() {
        if (checkRong() == false || validateForm() == false) {
            return;
        } else {
            try {
                String sqlQueryUpdate = "update NhanVien set HoTen =N'" + txtTen.getText() + "'," + "tuoi='" + txtTuoi.getText() + "'," + "GioiTinh=N'" + cbbGioiTinh.getSelectedItem() + "'," + "Sdt='" + txtSdt.getText() + "'," + "Email=N'" + txtEmail.getText() + "'," + "PhongBan=N'" + cbbPhongBan.getSelectedItem() + "'," + "Luong='" + txtLuong.getText() + "'," + "DiaChi=N'" + txtDiaChi.getText() + "'" + "where Manv like '" + txtMa.getText() + "';";
//                System.out.println(sqlQueryUpdate);
                Statement stmt = layKetNoi().createStatement();
                stmt.executeUpdate(sqlQueryUpdate);
                JOptionPane.showMessageDialog(this, "Đã cập nhật thông tin !");

            } catch (Exception e) {
            }
        }
        ListNv.removeAll(ListNv);
        taoList();
        tblModel.setRowCount(0);
        fillToTable();

    }

    public boolean validateForm() {
        String sdt = "^0+\\d*[0-9]{9}$";
        String email = "^[A-Za-z0-9._%+]+@[A-Za-z0-9.]+\\.[A-Za-z]{2,}$";
        String manv = "^^NV\\d*[0-9]\\d*$";
        String ten = "^[a-zA-ZÀ-ỹ]+\\s[a-zA-ZÀ-ỹ]+(\\s([a-zA-ZÀ-ỹ]+))?[a-zA-ZÀ-ỹ]";
        if (txtSdt.getText().matches(sdt) == false) {
            JOptionPane.showMessageDialog(this, "sdt sai định dạng !");
            return false;

        }
        if (txtEmail.getText().matches(email) == false) {
            JOptionPane.showMessageDialog(this, "Email sai định dạng !");
            return false;

        }
        try {
            Integer.valueOf(txtLuong.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lương phải là số", "Thông báo", 1);
            return false;
        }
        try {
            Integer.valueOf(txtTuoi.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Tuổi phải là số", "Thông báo", 1);
            return false;
        }
        if (Integer.parseInt(txtLuong.getText()) < 5000000 || Integer.parseInt(txtLuong.getText()) > 50000000) {
            JOptionPane.showMessageDialog(this, "ELương từ 5tr-50tr !");
            return false;

        }
        if (Integer.parseInt(txtTuoi.getText()) < 18 || Integer.parseInt(txtTuoi.getText()) > 65) {
            JOptionPane.showMessageDialog(this, "tuổi từ 18-65 !");
            return false;

        }

        if (txtMa.getText().matches(manv) == false) {
            JOptionPane.showMessageDialog(this, "Lỗi mã Nv (SV123)");
            return false;
        }
        if (cbbGioiTinh.getSelectedItem().equals("Giới Tính")) {
            JOptionPane.showMessageDialog(this, "Chưa chọn Giới tính");
            return false;
        }
        if (cbbPhongBan.getSelectedItem().equals("Phòng Ban")) {
            JOptionPane.showMessageDialog(this, "Chưa chọn phòng ban");
            return false;

        }
        if (txtTen.getText().matches(ten) == false) {
            JOptionPane.showMessageDialog(this, "Sai định dạng tên(Vd:Nam Nguyễn)");
            return false;

        }

        return true;
    }

    public void taoFile() throws IOException {
        String fileName = JOptionPane.showInputDialog(null, "Nhập tên file:");

        if (fileName != null && !fileName.trim().isEmpty()) {
            fileName = fileName.trim() + ".xls";
            ExcelWriter ex = new ExcelWriter();
            ex.writeToExcel(tblQuanLy, fileName);
            JOptionPane.showMessageDialog(this, "Lưu file thành công");
        }
    }

    public void docFile(){
        JFileChooser fcs=new JFileChooser();
        fcs.showDialog(this,"chọn file Xsl");
//        String path=JOptionPane.showInputDialog(this, "Nhập tên file");
String path=fcs.getSelectedFile().toString();
        try {
                    tblModel.setRowCount(0);

//            File excelFile = new File("D:\\Java3\\Bailam\\PS26792_Java3_IT18202\\Agile_Qlnv\\quanlynhanvien.xls");
File excelFile = new File(path);            
Workbook workbook = WorkbookFactory.create(excelFile);

            Sheet sheet = workbook.getSheetAt(0);

            for (int i = 0; i < sheet.getPhysicalNumberOfRows(); i++) {
                Row row = sheet.getRow(i);
                String[] rowData = new String[row.getPhysicalNumberOfCells()];
                for (int j = 0; j < row.getPhysicalNumberOfCells(); j++) {
                    Cell cell = row.getCell(j);
                    switch (cell.getCellType()) {
                        case STRING:
                            rowData[j] = cell.getStringCellValue();
                            break;
                        case NUMERIC:
                            rowData[j] = String.valueOf(cell.getNumericCellValue());
                            break;
                        case BOOLEAN:
                            rowData[j] = String.valueOf(cell.getBooleanCellValue());
                            break;
                        default:
                            rowData[j] = "";
                            break;
                    }
                }
                tblModel.addRow(rowData);
            }

            workbook.close();
            tblModel.removeRow(0);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    }
    
